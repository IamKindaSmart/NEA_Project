<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Order Summary</title>
  <style>
    body {
      font-family: Arial, sans-serif;
      background-color: #f4f4f9;
      margin: 0;
      padding: 20px;
      display: flex;
      justify-content: center;
      align-items: center;
      flex-direction: column;
      animation: fadeIn 1s ease-in-out;
    }

    @keyframes fadeIn {
      from {
        opacity: 0;
      }
      to {
        opacity: 1;
      }
    }

    .summary-container {
      background-color: white;
      border-radius: 8px;
      box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
      padding: 20px;
      width: 80%;
      max-width: 800px;
      margin-top: 20px;
      animation: slideIn 0.5s ease-in-out;
    }

    @keyframes slideIn {
      from {
        transform: translateY(20px);
        opacity: 0;
      }
      to {
        transform: translateY(0);
        opacity: 1;
      }
    }

    .summary-container h2 {
      text-align: center;
      color: #0073e6;
      animation: fadeInUp 1s ease-in-out;
    }

    @keyframes fadeInUp {
      from {
        transform: translateY(20px);
        opacity: 0;
      }
      to {
        transform: translateY(0);
        opacity: 1;
      }
    }

    .order-summary {
      margin-top: 20px;
    }

    .order-summary table {
      width: 100%;
      border-collapse: collapse;
      animation: fadeIn 1s ease-in-out;
    }

    .order-summary th, .order-summary td {
      padding: 10px;
      border: 1px solid #ddd;
      text-align: left;
    }

    .order-summary th {
      background-color: #f4f4f9;
    }

    .total-amount {
      text-align: right;
      margin-top: 20px;
      font-size: 1.2em;
      font-weight: bold;
      animation: fadeIn 1s ease-in-out;
    }

    .purchase-button-container {
      text-align: center;
      margin-top: 20px;
    }

    .purchase-button {
      background-color: #0073e6;
      color: white;
      border: none;
      padding: 10px 20px;
      border-radius: 5px;
      cursor: pointer;
      transition: all 0.3s ease;
      animation: bounceIn 1s ease-in-out;
    }

    @keyframes bounceIn {
      from {
        transform: scale(0.8);
        opacity: 0;
      }
      to {
        transform: scale(1);
        opacity: 1;
      }
    }

    .purchase-button:hover {
      background-color: #005bb5;
    }

    .purchase-button:active {
      background-color: #003f7f;
    }

    .purchase-button:disabled {
      background-color: #ccc;
      cursor: not-allowed;
    }

    .confirmation-message {
      display: none;
      background-color: #4caf50;
      color: white;
      padding: 10px;
      border-radius: 5px;
      margin-top: 20px;
      text-align: center;
      animation: fadeIn 1s ease-in-out;
    }

    .confirmation-message.show {
      display: block;
    }

    .notification-overlay {
      display: none;
      position: fixed;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      background-color: rgba(0, 0, 0, 0.5);
      z-index: 1000;
      justify-content: center;
      align-items: center;
    }

    .notification-overlay .notification-content {
      background-color: white;
      padding: 20px;
      border-radius: 8px;
      text-align: center;
      box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
      animation: fadeIn 0.5s ease-in-out;
    }

    @keyframes fadeIn {
      from {
        opacity: 0;
        transform: scale(0.9);
      }
      to {
        opacity: 1;
        transform: scale(1);
      }
    }

    /* Modal CSS */
    .modal {
      display: none;
      position: fixed;
      z-index: 1001;
      left: 0;
      top: 0;
      width: 100%;
      height: 100%;
      overflow: auto;
      background-color: rgba(0, 0, 0, 0.5);
      justify-content: center;
      align-items: center;
    }

    .modal-content {
      background-color: white;
      padding: 20px;
      border-radius: 8px;
      width: 80%;
      max-width: 600px;
      box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
    }

    .close {
      color: #aaa;
      float: right;
      font-size: 28px;
      font-weight: bold;
    }

    .close:hover,
    .close:focus {
      color: black;
      text-decoration: none;
      cursor: pointer;
    }

    .time-slot {
      display: flex;
      flex-wrap: wrap;
      gap: 10px;
      margin-top: 20px;
    }

    .time-slot button {
      background-color: #0073e6;
      color: white;
      border: none;
      padding: 10px 20px;
      border-radius: 5px;
      cursor: pointer;
      transition: all 0.3s ease;
    }

    .time-slot button:hover {
      background-color: #005bb5;
    }

    .time-slot button:active {
      background-color: #003f7f;
    }

    .time-slot button.selected {
      background-color: #4caf50;
    }

    /* Text box CSS */
    .message-box {
      margin-top: 20px;
    }

    .message-box textarea {
      width: 100%;
      height: 100px; /* Fixed height */
      padding: 10px;
      border: 1px solid #ccc;
      border-radius: 5px;
      font-size: 1em;
      resize: none; /* Disable resizing */
      box-sizing: border-box; /* Include padding and border in the element's total width and height */
    }

    .message-box textarea::placeholder {
      color: #aaa;
      font-style: italic;
    }

    .message-box textarea:focus {
      border-color: #0073e6;
      outline: none;
      box-shadow: 0 0 5px rgba(0, 115, 230, 0.5);
    }

    #charCount {
      font-size: 0.9em;
      color: #555;
      margin-top: 5px;
      text-align: right;
    }
  </style>
</head>
<body>
  <div class="summary-container">
    <h2>Order Summary</h2>
    <div class="order-summary">
      <table>
        <thead>
          <tr>
            <th>Item Name</th>
            <th>Quantity</th>
            <th>Price</th>
            <th>Total</th>
          </tr>
        </thead>
        <tbody>
          <% items.forEach(item => { %>
          <tr>
            <td><%= item.item_name %></td>
            <td><%= item.quantity %></td>
            <td><%= item.price.toFixed(2) %></td>
            <td><%= (item.quantity * item.price).toFixed(2) %></td>
          </tr>
          <% }) %>
        </tbody>
      </table>
    </div>
    <div class="total-amount">
      Total Amount: Â£<%= totalAmount.toFixed(2) %>
    </div>
    <form action="/submit-order-summary" method="POST">
      <input type="hidden" name="items" value='<%= JSON.stringify(items) %>'>
      <input type="hidden" name="totalAmount" value="<%= totalAmount %>">
      <input type="hidden" name="collectionTime" id="collectionTimeInput">

      <!-- Add a text box for the user to type a message -->
      <div class="message-box">
        <textarea id="orderMessage" name="orderMessage" rows="4" maxlength="200" placeholder="Add a message to your order (optional)"></textarea>
        <div id="charCount">200 characters remaining</div>
      </div>

      <div class="purchase-button-container">
        <button class="purchase-button" type="submit" id="purchaseButton" disabled>Purchase</button>
        <button class="purchase-button" type="button" id="collectionButton">Choose collection times</button>
      </div>
    </form>
    <div class="confirmation-message" id="confirmationMessage">
      Thank you for your purchase!
    </div>
  </div>

  <!-- Modal Structure -->
  <div id="timeModal" class="modal">
    <div class="modal-content">
      <span class="close">&times;</span>
      <h2>Select Collection Time</h2>
      <div class="time-slot">
        <% collectionTimes.forEach((row) => { %>
          <button type="button" class="time-slot-button" data-time="<%= row.time %>"><%= row.time %></button>
        <% }); %>
      </div>
    </div>
  </div>

  <div class="notification-overlay" id="successNotification">
    <div class="notification-content">
      <p>Your order has been successfully placed!</p>
      <p>Redirecting to the dashboard...</p>
    </div>
  </div>

  <script>
    document.addEventListener('DOMContentLoaded', function() {
      const modal = document.getElementById('timeModal');
      const closeModal = document.querySelector('.close');
      const collectionButton = document.getElementById('collectionButton');
      const purchaseButton = document.getElementById('purchaseButton');
      const confirmationMessage = document.getElementById('confirmationMessage');
      const collectionTimeInput = document.getElementById('collectionTimeInput');
      const successNotification = document.getElementById('successNotification');
      const messageBox = document.getElementById('orderMessage');
      const charCount = document.getElementById('charCount');

      // Open the modal when the "Choose collection times" button is clicked
      collectionButton.addEventListener('click', function() {
        modal.style.display = 'flex';
      });

      // Close the modal when the close button is clicked
      closeModal.addEventListener('click', function() {
        modal.style.display = 'none';
      });

      // Close the modal when clicking outside of it
      window.addEventListener('click', function(event) {
        if (event.target === modal) {
          modal.style.display = 'none';
        }
      });

      // Handle collection time selection
      document.addEventListener('click', function(event) {
        if (event.target.classList.contains('time-slot-button')) {
          // Deselect all buttons and select the clicked one
          document.querySelectorAll('.time-slot-button').forEach(btn => btn.classList.remove('selected'));
          event.target.classList.add('selected');

          // Get the selected time and update the hidden input
          const selectedTime = event.target.getAttribute('data-time');
          collectionTimeInput.value = selectedTime;

          // Enable the "Purchase" button
          purchaseButton.disabled = false;

          // Close the modal and show the confirmation message
          modal.style.display = 'none';
          confirmationMessage.textContent = `You have selected ${selectedTime} as your collection time.`;
          confirmationMessage.classList.add('show');
        }
      });

      // Real-time character count for the message box
      messageBox.addEventListener('input', function() {
        const remaining = 200 - messageBox.value.length;
        charCount.textContent = `${remaining} characters remaining`;
      });

      // Show success notification and redirect after form submission
      const form = document.querySelector('form[action="/submit-order-summary"]');
      form.addEventListener('submit', function(event) {
        event.preventDefault(); // Prevent default form submission

        console.log('Form data:', {
          items: document.querySelector('input[name="items"]').value,
          totalAmount: document.querySelector('input[name="totalAmount"]').value,
          collectionTime: document.querySelector('input[name="collectionTime"]').value,
          message: document.querySelector('textarea[name="orderMessage"]').value,
        });

        // Show the success notification
        successNotification.style.display = 'flex';

        // Wait for 3 seconds, then redirect to the student dashboard
        setTimeout(() => {
          window.location.href = '/student_dashboard';
        }, 3000);
      });
    });
  </script>
</body>
</html>